---
- hosts: "{{ targets | default('zabbix-hosts') }}"
  become: true

  tasks:
    - name: Install the RPM for x86_64
      yum:
        name: http://repo.zabbix.com/zabbix/4.0/rhel/7/x86_64/zabbix-release-4.0-1.el7.noarch.rpm
      when: ansible_architecture == "x86_64"

    - name: Copy the repo file for ppc64le zabbix agent.
      get_url:
        url: http://mochat.massopen.cloud/repos/ppc64le-zabbix-4.repo
        dest: /etc/yum.repos.d/ppc64le-zabbix-4.repo
      when: ansible_architecture == "ppc64le"

    - name: Install zabbix agent and policycoreutils-python
      yum:
        name: "{{ packages }}"
        state: latest
        update_cache: true
      vars:
        packages:
        - zabbix-agent
        - policycoreutils-python
        - pciutils

    - name: Install dmidecode only on x86 machines.
      yum:
        name: dmidecode
        state: latest
        update_cache: true
      when: ansible_architecture == "x86_64"

    - name: Install zabbix agent configuration
      copy:
        src: zabbix_agentd.conf
        dest: /etc/zabbix/zabbix_agentd.conf
      notify:
        - Restart Zabbix

    - name: Copy the PSK file
      copy:
        src: zabbix_agentd.psk
        dest: /etc/zabbix/zabbix_agentd.psk
        owner: zabbix
        group: zabbix
        mode: 0400

    - name: Copy script to get inventory
      copy:
        src: inventory.sh
        dest: /etc/zabbix/inventory.sh
        owner: zabbix
        group: zabbix
        mode: 0550

    - name: Copy the zabbix sudoers file
      copy:
        src: zabbix.sudoers
        dest: /etc/sudoers.d/zabbix
        owner: root
        group: root
        mode: 0440
      when: ansible_architecture == "x86_64"

    - name: Start and enable zabbix agent
      service:
        name: zabbix-agent
        state: started
        enabled: true

    - name: Test if SElinux is running
      command: getenforce
      register: sestatus
      changed_when: false

    - name: Add zabbix_agent_t to permissive domain
      selinux_permissive:
        name: zabbix_agent_t
        permissive: true
      when: '"Disabled" not in sestatus.stdout'

    - name: Let zabbix process run sudo
      seboolean:
        name: zabbix_run_sudo
        state: true
        persistent: true
      when: '"Disabled" not in sestatus.stdout'

  handlers:
    - name: Restart Zabbix
      service:
        name: zabbix-agent
        state: restarted
        enabled: true
