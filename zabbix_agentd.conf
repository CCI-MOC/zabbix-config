PidFile=/var/run/zabbix/zabbix_agentd.pid
LogFile=/var/log/zabbix/zabbix_agentd.log
LogFileSize=0

Server=zabbix.massopen.cloud,172.16.0.203
ServerActive=zabbix.massopen.cloud

User=zabbix

Include=/etc/zabbix/zabbix_agentd.d/
Timeout=10

# Use PSK to talk to server
TLSConnect=psk
TLSAccept=psk
TLSPSKFile=/etc/zabbix/zabbix_agentd.psk
TLSPSKIdentity=MOC-PSK-1

# GPU Monitoring
# UserParameter=gpu.discovery,/etc/zabbix/scripts/get_gpus_info.sh
UserParameter=gpu.number,/usr/bin/nvidia-smi -L | /usr/bin/wc -l
UserParameter=gpu.fanspeed[*],nvidia-smi --query-gpu=fan.speed --format=csv,noheader,nounits -i $1 | tr -d "\n"
UserParameter=gpu.power[*],nvidia-smi --query-gpu=power.draw --format=csv,noheader,nounits -i $1 | tr -d "\n"
UserParameter=gpu.temp[*],nvidia-smi --query-gpu=temperature.gpu --format=csv,noheader,nounits -i $1 | tr -d "\n"
UserParameter=gpu.utilization[*],nvidia-smi --query-gpu=utilization.gpu --format=csv,noheader,nounits -i $1 | tr -d "\n"
UserParameter=gpu.memfree[*],nvidia-smi --query-gpu=memory.free --format=csv,noheader,nounits -i $1 | tr -d "\n"
UserParameter=gpu.memused[*],nvidia-smi --query-gpu=memory.used --format=csv,noheader,nounits -i $1 | tr -d "\n"
UserParameter=gpu.memtotal[*],nvidia-smi --query-gpu=memory.total --format=csv,noheader,nounits -i $1 | tr -d "\n"

# System Inventory stuff
# Make the user parameters same for ppc64le and x86 since the zabbix server can't use different keys
# when doing host inventories.

UserParameter=mocsys.product,sudo dmidecode -s system-product-name 2>/dev/null||  cat /proc/device-tree/model
UserParameter=mocsys.serial,sudo dmidecode -s chassis-serial-number 2>/dev/null||  cat /proc/device-tree/system-id
UserParameter=mocsys.bios,echo "BIOS/Firmware: " `sudo dmidecode -s bios-version 2>/dev/null||  cat /proc/device-tree/ibm,firmware-versions/version`
UserParameter=mocsys.inventory,/etc/zabbix/inventory.sh
UserParameter=package.mess,package-cleanup --dupes |grep -viE 'subscription-manager|Loaded plugins' |wc -l

# For monitoring linux raid
UserParameter=md.discover,ls /sys/class/block | awk 'BEGIN{printf "{\"data\":["}; /md/ {printf c"{\"{#MDNAME}\":\""$1"\"}";c=","}; END{print "]}"}'
UserParameter=md.degraded[*],cat /sys/block/$1/md/degraded
UserParameter=md.sync_action[*],cat /sys/block/$1/md/sync_action
UserParameter=md.raid_disks[*],cat /sys/block/$1/md/raid_disks
UserParameter=md.state[*],cat /sys/block/$1/md/array_state

# Discover storage drives
UserParameter=drives.discover,/etc/zabbix/drive_discovery.py
UserParameter=drives.health[*],/etc/zabbix/drive_discovery.py $1 $2 $3

# Ceph root discovery and usage information
UserParameter=ceph.custom.root.discover,/etc/zabbix/ceph.py
UserParameter=ceph.custom.root.used[*],/etc/zabbix/ceph.py used $1
UserParameter=ceph.custom.root.total[*],/etc/zabbix/ceph.py total $1

# Discover logical drives and report i/o stats
UserParameter=ldrives.discover,/etc/zabbix/disk_io.py
UserParameter=ldrives.stats[*],/etc/zabbix/disk_io.py $1 $2

#DRBD discovery and reporting
#Remplate for this i sat https://github.com/sbuelow/zabbix-template-drbd
#Original agent configuration is for DRBD 8.x, I've made changes necessary to work with DRBD 9.x
UserParameter=drbd.discover,sudo drbdadm sh-resources|tr ' ' '\n'| awk 'BEGIN{printf "{\"data\":["}; /.*/ {printf c"{\"{#DRBDNAME}\":\""$1"\"}";c=","}; END{print "]}"}'
UserParameter=drbd.cstate[*],sudo drbdadm cstate $1
UserParameter=drbd.dstate_local[*],sudo drbdadm dstate $1|cut -f1 -d/
UserParameter=drbd.dstate_remote[*],sudo drbdadm dstate $1|cut -f2 -d/
UserParameter=drbd.role_local[*],sudo drbdadm status $1|grep -i role| cut -d : -f 2|head -n1
UserParameter=drbd.role_remote[*],sudo drbdadm status $1|grep -i role| cut -d : -f 2|tail -n1
UserParameter=drbd.device[*],sudo drbdadm sh-dev $1
UserParameter=drbd.ip[*],sudo drbdadm sh-ip $1
UserParameter=drbd.mdev[*],sudo drbdadm sh-md-dev $1
UserParameter=drbd.version,cat /proc/drbd |grep "^version: "|sed -e 's/^version: //g'

